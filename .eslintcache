[{"G:\\Code\\react\\ECom\\postmygift\\src\\index.js":"1","G:\\Code\\react\\ECom\\postmygift\\src\\App.js":"2","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Products.jsx":"3","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Product\\Product.jsx":"4","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Product\\styles.js":"5","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Navbar\\Navbar.jsx":"6","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Navbar\\styles.js":"7","G:\\Code\\react\\ECom\\postmygift\\src\\components\\index.js":"8","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\styles.js":"9","G:\\Code\\react\\ECom\\postmygift\\src\\lib\\commerce.js":"10","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\Cart.jsx":"11","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\styles.js":"12","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\CartItem\\Styles.js":"14","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\Styles.js":"16","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\CostomTextField.jsx":"19","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":146,"mtime":1624945371828,"results":"21","hashOfConfig":"22"},{"size":2975,"mtime":1625047110693,"results":"23","hashOfConfig":"22"},{"size":692,"mtime":1624944957206,"results":"24","hashOfConfig":"22"},{"size":1339,"mtime":1624945408895,"results":"25","hashOfConfig":"22"},{"size":399,"mtime":1624867457371,"results":"26","hashOfConfig":"22"},{"size":1527,"mtime":1624959022246,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1624872363804,"results":"28","hashOfConfig":"22"},{"size":237,"mtime":1624963543201,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1624873365317,"results":"30","hashOfConfig":"22"},{"size":129,"mtime":1624876150988,"results":"31","hashOfConfig":"22"},{"size":1945,"mtime":1624962148149,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1624949091693,"results":"33","hashOfConfig":"22"},{"size":1320,"mtime":1624960933318,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1624955915010,"results":"35","hashOfConfig":"22"},{"size":3286,"mtime":1625047608007,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1624963254411,"results":"37","hashOfConfig":"22"},{"size":2803,"mtime":1625044726354,"results":"38","hashOfConfig":"22"},{"size":5646,"mtime":1625034374556,"results":"39","hashOfConfig":"22"},{"size":623,"mtime":1625045806125,"results":"40","hashOfConfig":"22"},{"size":1071,"mtime":1625036152505,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11rrrm9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"G:\\Code\\react\\ECom\\postmygift\\src\\index.js",[],["85","86"],"G:\\Code\\react\\ECom\\postmygift\\src\\App.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Products.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Product\\Product.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\Product\\styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Navbar\\Navbar.jsx",["87","88"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Typography } from '@material-ui/core'; \r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { classExpression } from '@babel/types';\r\nimport logo from '../../assets/logo-1.svg';\r\nimport usestyles from './styles';\r\nimport {Link, useLocation} from 'react-router-dom';\r\n\r\nconst Navbar = ({totalItems}) => {\r\n    const classes = usestyles();\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classExpression.appbar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" varient= \"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src ={logo} alt=\"Comerce.js\" height=\"25px\" className={classes.image} />\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n                    {location.pathname == '/' && (\r\n                    <div className={classes.button}>\r\n                        <Link to=\"/cart\"></Link>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show chart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\" >\r\n                                <ShoppingCart />\r\n                            </Badge> \r\n                        </IconButton>\r\n                    </div>)}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","G:\\Code\\react\\ECom\\postmygift\\src\\components\\Navbar\\styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\index.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Products\\styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\lib\\commerce.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\Cart.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\Cart\\CartItem\\Styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\Styles.js",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\AddressForm.jsx",["89","90"],"import React, {useState, useEffect} from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from './Checkout/CostomTextField';\r\nimport { commerce } from '../../lib/commerce';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressForm = ( {checkoutToken, next } ) => {\r\n    const [shippingCountries, setShippingCountries ] = useState([]);\r\n    const [shippingCountry, setShippingCountry ] = useState('');\r\n    const [shippingSubDivisions, setShippingSubDivisions ] = useState([]);\r\n    const [shippingSubDivision, setShippingSubDivision ] = useState('');\r\n    const [shippingOptions, setShippingOptions ] = useState([]);\r\n    const [shippingOption, setShippingOption ] = useState('');\r\n\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id:code, label:name}));\r\n    const subdivisions = Object.entries(shippingSubDivisions).map(([code, name]) => ({id:code, label:name}));\r\n    const options = shippingOptions.map((sO)=>({id: sO.id, label: `${sO.description}- (${sO.price.formatted_with_symbol})`}))\r\n\r\n    \r\n    const fetchShippingCountries = async (checkoutTokenId) =>{\r\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n            setShippingCountries(countries);\r\n            setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivision = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n            setShippingSubDivisions(subdivisions);\r\n            setShippingSubDivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region=null) =>{\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId,{ country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchShippingCountries(checkoutToken.id)\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if (shippingCountry) fetchSubdivision(shippingCountry);\r\n    },[shippingCountry]);\r\n\r\n    useEffect(()=> {\r\n        if (shippingSubDivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubDivision)\r\n    },[shippingSubDivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n                <FormProvider {...methods}>\r\n                    <form onSubmit={methods.handleSubmit((data)=> next({ ...data, shippingCountry, shippingSubDivision, shippingOption}))}>\r\n                        <Grid container spacing={3}>\r\n                            <FormInput name=\"firstName\" label=\"First name\"/>\r\n                            <FormInput name=\"lastName\" label=\"Last name\"/>\r\n                            <FormInput name=\"address1\" label=\"Address\"/>\r\n                            <FormInput name=\"email\" label=\"Email\"/>\r\n                            <FormInput name=\"city\" label=\"City\"/>\r\n                            <FormInput name=\"zip\" label=\"PIN Code\"/>\r\n                             <Grid item xs={12} sm={6}>\r\n                                <InputLabel>Shipping Counrty</InputLabel>\r\n                                <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                   {countries.map((country)=>(\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                   ))}\r\n                                </Select>\r\n                            </Grid>\r\n                         <Grid item xs={12} sm={6}>\r\n                                <InputLabel>Shipping Subdivision</InputLabel>\r\n                                <Select value={shippingSubDivision} fullWidth onChange={(e) => setShippingSubDivision(e.target.value)}>\r\n                                   {subdivisions.map((Subdivision)=>(\r\n                                    <MenuItem key={Subdivision.id} value={Subdivision.id}>\r\n                                        {Subdivision.label}\r\n                                    </MenuItem>\r\n                                   ))}\r\n                                </Select>\r\n                            </Grid>\r\n                           <Grid item xs={12} sm={6}>\r\n                                <InputLabel>Shipping Option</InputLabel>\r\n                                <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                   {options.map((Option)=>(\r\n                                    <MenuItem key={Option.id} value={Option.id}>\r\n                                        {Option.label}\r\n                                    </MenuItem>\r\n                                   ))}\r\n                                </Select>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <br/>\r\n                        <div style={{display: 'flex',justifyContent:'space-between'}}>\r\n                                    <Button component={Link} to='/cart' variant='outline'>Back to Cart</Button>\r\n                                    <Button type='submit' color='primary' variant='contained'>Next</Button>\r\n                        </div>\r\n                    </form>\r\n                </FormProvider>           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Checkout\\CostomTextField.jsx",[],"G:\\Code\\react\\ECom\\postmygift\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":54},{"ruleId":"99","severity":1,"message":"100","line":21,"column":40,"nodeType":"101","messageId":"102","endLine":21,"endColumn":42},{"ruleId":"103","severity":1,"message":"104","line":46,"column":7,"nodeType":"105","endLine":46,"endColumn":9,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":54,"column":7,"nodeType":"105","endLine":54,"endColumn":28,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"117","text":"118"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubDivision]",{"range":"119","text":"120"},[2122,2124],"[checkoutToken.id]",[2384,2405],"[checkoutToken.id, shippingCountry, shippingSubDivision]"]